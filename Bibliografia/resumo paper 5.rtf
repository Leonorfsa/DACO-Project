{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red255\green0\blue0;\red0\green68\blue254;}
{\*\expandedcolortbl;;\csgenericrgb\c100000\c0\c0;\csgenericrgb\c0\c26667\c99608;}
\paperw11900\paperh16840\margl1440\margr1440\vieww21120\viewh6720\viewkind0
\pard\tx141\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\li439\fi-8\ri-11687\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Central Focused Convolutional Neural Networks. \
Two key insights:\
1) The proposed model captures a set of nodule-sensitive features from both 3D and 2D CT images simultaneously.\
2) When classifying an image voxel (=pixel em 3D), the effects of its neighbors can vary according to their spatial location ==> central pooling layer, retaining much information on voxel patch center, followed by multi-scale patch learning strategy. \
The training samples were selected according to their degree of segmentation difficulty (weighted sampling). \
\
CF-CNN dice scores: 82.15%. \
\
Devido \'e0 heterogeneidade dos n\'f3dulos, \'e9 dif\'edcil distingui-los usando apenas valores de intensidade, podendo estes ser semelhantes \'e0 parede do pulm\'e3o, ou inclusive ser escuros o suficiente para ter dissimilaridade para com outras partes do n\'f3dulo. Da mesma forma, n\'f3dulos non-solid n\'e3o podem sofrer uma opera\'e7\'e3o morfol\'f3gica apenas pois t\'eam pouco contraste para a informa\'e7\'e3o no CT.\
\
Foram usados m\'e9todos intensity-based com opera\'e7\'f5es morfol\'f3gicas; assim como m\'e9todos de otimiza\'e7\'e3o de energia, incluindo level set e graph cut. \
No entanto, a robustez continua a ser problem\'e1tica para n\'f3dulos justapleurais. \
Poderiam ser usados m\'e9todos sofisticados para aplicar uma shape constraint, no entanto isto n\'e3o funcionaria para n\'f3dulos com formas irregulares. \
\
Assim, foi usado um esquema de classifica\'e7\'e3o de voxeis que distingue voxeis de n\'f3dulos de voxeis saud\'e1veis. \
A estrutura de CNN tem 2 ramos, para cobrir ambas as features 3D e 2D. O ramo 3D aprende features multi-view de v\'e1rias fatias do CT; O ramo 2D aprende multi-scale features a partir de patches 2D. A estrat\'e9gia de multi-scale permite ao modelo aprender features multi-scale sem envolver diversas networks. \
\
Foi desenhada uma camada de central pooling para guardar as features patch-center em vez das features patch edge. A estrat\'e9gia usada reserva muita informa\'e7\'e3o target-voxel-focused, tendo melhor performance que a max pooling uniformemente distribu\'edda. \
Durante o treino do modelo, foi usado um m\'e9todo de sampling para processar labels de treino desequilibradas e extrair os patches mais dif\'edceis para permitir um treino do modelo eficiente. Os voxels foram assim sampled sendo que cada voxel recebia um score representando a sua dificuldade de segmenta\'e7\'e3o. \
\
Related work: \
(envolvem detetar o volume de interesse (VOI) e segmentar dentro desse VOI)\
- Dos m\'e9todos morfol\'f3gicos, foram aplicadas opera\'e7\'f5es como abertura l\'f3gica para remover nodule-attached vessels. \
O raio de vessels decresce \'e0 medida que os vessels evolvem na periferia dos pulm\'f5es. Rolling ball filters combinados com uma an\'e1lise rule-based foram propostos para n\'f3dulos justapleurais. \
- \'c9 dificil encontrar um template para v\'e1rios tamanhos de n\'f3dulos. N\'f3dulos n\'e3o-s\'f3lidos em particular. \
- Para separar n\'f3dulos da parede do pulm\'e3o, foi proposta uma hip\'f3tese de forma e um m\'e9todo de region growing baseado em contraste esf\'e9rico, de acordo com o valor de intensidade local do n\'f3dulo. Aqui mant\'e9m-se a dificuldade para n\'f3dulos de formas irregulares, devido a violar a hip\'f3tese de forma. \
-Em m\'e9todos de otimiza\'e7\'e3o de energia, por exemplo level-set-based methods, usam uma fun\'e7\'e3o de level set para descrever a imagem e a fun\'e7\'e3o \'e9 minimizada quando o contorno segmentado corresponde aos limites do n\'f3dulo. \
Pode tamb\'e9m usar-se uma combina\'e7\'e3o de level set e shape prior hypothesis. Tamb\'e9m foi usado um graph cut algorithm para segmentar o n\'f3dulo, ao enquadrar o problema numa tarefa de otimiza\'e7\'e3o a flow m\'e1ximo.  Este algoritmo cria um mapa de intensidade e de forma a partir de non-parametric mean shift clustering. Depois, o algoritmo de graph cut \'e9 usado para segmenta\'e7\'e3o com uma formula\'e7\'e3o de energia. Similarmente aos m\'e9todos de region growing, estes m\'e9todos t\'eam a sua performance prejudicada devido a n\'f3dulos justapleurais ou de baixo contraste. \
\
-Passando aos m\'e9todos de machine-learning, os investigadores usaram modelos de classifica\'e7\'e3o combinados com high-level features para segmenta\'e7\'e3o: \
	-Usar um set de features de textura e de forma para representar voxels. Depois, uma um modelo conditional random field (CRF) foi treinado para classifica\'e7\'e3o. \
	-Desenhar as features da imagem espacial de forma a que as voxels de diferentes tipos de n\'f3dulos sejam mapeados num mesmo espa\'e7o universal. Estas features de alto-n\'edvel provaram ser translation and rotational invariantes. \
\
CNNs s\'e3o semelhantes a estes m\'e9todos de machine-learning convertendo a segmenta\'e7\'e3o em classifica\'e7\'e3o de voxel. Um modelo CNN \'e9 uma neural network multi-layer que aprende a fazer mappings hierarquicos entre raw image data e labels. Os modelos FCN envolvem camadas de up-sampling para que o output de CNN tenham o mesmo tamanho que a imagem de input e, por isso, s\'f3 necessitam de uma forward propagation para segmentar a imagem. \
\
The major distinctions of the proposed CF-CNN model comparing to the previous approaches are three-fold: 1) we proposed a two-branch CNN architecture to learn both multi-view 3-D features and local texture features simultaneously; 2) we combined multi- scale patches into a multi-channel patch that enables multi-scale feature extraction without involving multiple networks; 3) we proposed a novel central pooling layer to select features according to their spatial relevance to the target voxel (i.e., patch center voxel).\
\
\
M\'c9TODOS\
\
1) Arquitetura do modelo\
3D and 2D views of CT Imaging. \
Extraem um 3D patch e um 2D multi-scale patch centrado no voxel como input do modelo, e predict se o voxel pertence \'e0 classe de n\'f3dulo ou de tecido saud\'e1vel.\
\

\b 1.1) Estrutura de CNN
\b0 \
A Network inclui 2 deep branches que partilham uma estrutura id\'eantica mas s\'e3o treinados com patches de imagens diferentes. \cf2 Cada ramo consiste em 6 convolutional layers, duas central pooling layers e uma fully connected layer\cf0 . As 6 layers convolucionais foram \cf2 divididas em 3 blocos\cf0 , onde cada bloco partilha a mesma estrutura, incluindo 2 convolutional layers de kernel 3x3. Estas layers permitem opera\'e7\'f5es de convolution em todos os input feature maps para obter o output feature map, definido por:\
\cf3 f^j=PRELU(somat\'f3rio(i) c^(ij)*f^i + b^j)\cf0 \
em que fi e fj s\'e3o os i input feature map e j output feature map, respetivamente. \
\
Para acelerar o processo do training, \cf2 cada layer de convolution \'e9 seguida por batch normalization\cf0 , para normalizar o output correspondente. \
Depois de cada layer convolucional, uma \cf2 parametric rectified linear unit (PRELU) \'e9 usada como uma non-linear activation function\cf0 . \
\cf3 PRELU(f^j)=f^j para f^j>o  ou aj f^j para f<=0;\cf0 \
a \'e9 um par\'e2metro trein\'e1vel e j representa a jth feature map da convolutional layer. a \'e9 inicializado a 0.25. \
\cf2 PRELU provou ser mais eficiente do que a RELU convencional\cf0  em imagenet classification tasks. \
\
Entre cada bloco, \'e9 feito um \cf2 pooling method chamado central pooling\cf0 , para selecionar subsets de features das convolutional layers. \
\
Depois da ultima convolutional layer, a fully connected layer \'e9 aplicada para cada output unit conectar a todos os inputs. Esta layer captura correla\'e7\'f5es entre diferentes features. PReLU tamb\'e9m \'e9 usado como activation function depois do fully connected layer, com o prop\'f3sito de conseguir n\'e3o-linearidade. \
\
No fim do modelo, os dois CNN branches s\'e3o combinados ao concatenar as suas fully connected layers. Finalmente, outra fully connected layer \'e9 aplicada para capturar as correla\'e7\'f5es entre as features dos dos CNN branches. \
\
No caso da output layer corresponder a 2 unidades, os activation values s\'e3o enviados para um \cf2 binary softmax function\cf0 , que \'e9 convertida em distribui\'e7\'f5es probabilisticas nas labels da classe. \
A probabilidade \'e9 dada da forma:\
\cf3 pk=exp(ok)/somatorio(h entre 0 e 1) exp(oh)\cf0        em que ok \'e9 o kth output do network para dado input. \
O objetivo da network training \'e9 de maximizar a probabilidade da classe correta. Isto \'e9 conseguido ao \cf2 minimizar a cross-entropy loss para cada sample\cf0 . Supondo que y \'e9 a label certa para dado input patch entre (0,1). A loss function \'e9 definida por (f\'f3rmula da cross-entropy loss). \
Os \cf2 weights W s\'e3o inicializados com o Xavier algorithm\cf0 , e s\'e3o atualizados com o\cf2  Stochastic gradient descent:\cf0  \cf3 Wt+1=Wt+Vt+1=mean*Vt-alfa * gradienteL(Wt)\cf0 \
S\'f3 foi usado um batch de 128 samples para calcular o gradiente L(W), pois \'e9 dificil guardar milhoes de training samples na mem\'f3ria de uma vez. A mean usada foi de 0.9, alfa \'e9 atualizada usando: at+1=a0(1+yt)^-p , em que y=0.0001 e p=0.75. a0 \'e9 inicializada a 6*10^-5. \
\
\

\b 1.2) Arquitetura dos 2 ramos
\b0 \
\
\cf2 A estrutura proposta \'e9 preparada para capturar ambas as informa\'e7\'f5es 2D e 3D simultaneamente\cf0 . \
O ramo da 3D Patch recebe um volume 3D de tamanho 3x35x35 como input. Este volume de 3 slices \'e9 tratado como uma imagem de 3 canais e \'e9 inserido no 3D patch CNN branch. Devido \'c0 grande vari\'e2ncia das intensidades da CT image, o patch \'e9 normalizado com um z-score definido por f(x)=(x-xmean)/xstd, com xmean e xstd das intensidades dos voxels no patch. \
O branch 2D \'e9 introduzido para permitir focar nas learning features das imagem de vista axial, devido \'e0 sua grande resolu\'e7\'e3o. o 2D CNN branch serve para modelar a rela\'e7ao entre 2 patches atrav\'e9s da convolutional layer. \
Primeiro, s\'e3o extra\'eddos 2 patches de tamanho 65x65 e 35x35 no target voxel. Depois, s\'e3o re-escalados para o mesmo tamanho (35x35) com third-order spline interpolation, para formar um patch de 2 canais. isto \'e9 fornecido ao 2D CNN branch. Esta estrat\'e9gia permite o modelo aprender multiscale features dentro de uma network, em vez de treinar multiplas networks separadas. \
\
1.3) Central Pooling\
Para dada image patch, \'e9 intuitivo que os voxels perto do centro ser\'e3o mais relevantes para o target voxel, enquanto que os edge voxels ser\'e3o menos relevantes. Assim, \'e9 proposto um central pooling operation que reserva mais features \'e0 volta do patch center, ao contr\'e1rio do max pooling tradicional que ignora as posi\'e7\'f5es . \
\
\
\
\
}